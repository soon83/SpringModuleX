import nu.studer.gradle.jooq.JooqEdition

apply plugin: 'nu.studer.jooq'

dependencies {
    // common
    implementation project(':common-dtos')
    implementation project(':common-exceptions')
    implementation project(':common-utils')

    // libs
    implementation libs.spring.boot.starter.data.jpa

    // jooq
    jooqGenerator libs.mariadb.java.client
    //jooqGenerator libs.postgresql
    jooqGenerator libs.logback.classic

    // querydsl
    implementation "com.querydsl:querydsl-jpa:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
}

def activeProfile = project.hasProperty('profile') ? project.getProperty('profile') : 'generate'
println "Active profile: ${activeProfile}"

def dbSchema = project.findProperty("dbSchema_${activeProfile}")
def dbDriver = project.findProperty("dbDriver")
def dbParameters = project.findProperty("dbParameters") // postgresql 에서는 사용 안함
def dbUrl = project.findProperty("dbUrl_${activeProfile}") + "/" + dbSchema + dbParameters
//def dbUrl = project.findProperty("dbUrl_${activeProfile}") + "/" + dbSchema
def dbUser = project.findProperty("dbUser_${activeProfile}")
def dbPassword = project.findProperty("dbPassword_${activeProfile}")
def packageGroup = project.findProperty("packageGroup")

jooq {
    version = '3.19.11'
    edition = JooqEdition.OSS

    configurations {
        main {
            generationTool {
                jdbc {
                    driver = dbDriver
                    url = dbUrl
                    user = dbUser
                    password = dbPassword
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.mariadb.MariaDBDatabase'
                        inputSchema = dbSchema // mariadb 에서는 이렇게 설정
                        //name = 'org.jooq.meta.postgres.PostgresDatabase'
                        //inputSchema = 'public' // postgres 에서는 이렇게 설정
                        includes = '.*' // 모든 테이블 포함
                        excludes = '' // 제외할 테이블 없음
                    }
                    generate {
                        daos = true // DAO 생성
                        pojos = true // POJO 생성
                        fluentSetters = true // Setter 메서드 체이닝 가능하도록 설정
                        javaTimeTypes = true // java.time 패키지 사용
                    }
                    target {
                        packageName = packageGroup
                        directory = 'build/generated-src/jooq/main' // 생성된 소스 디렉토리
                    }
                    strategy {
                        name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                    }
                }
            }
        }
    }
}
